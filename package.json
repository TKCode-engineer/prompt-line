{
  "name": "prompt-line",
  "version": "0.8.6",
  "description": "Prompt Line is a macOS app developed to improve the prompt input experience in the terminal for CLI-based AI coding agents such as Claude Code, OpenAI Codex CLI, and Aider.",
  "main": "dist/main.js",
  "scripts": {
    "start": "npm run compile && electron . --disable-gpu-sandbox --disable-software-rasterizer --disable-extensions",
    "compile": "npm run compile:cross-platform",
    "compile:mac": "tsc && npm run build:renderer && cd native && make install && cp -r ../src/native-tools ../dist/",
    "compile:win": "tsc && npm run build:renderer && npm run build:native:win && npm run copy:assets",
    "compile:linux": "tsc && npm run build:renderer && npm run copy:assets",
    "compile:cross-platform": "tsc && npm run build:renderer && npm run build:native:cross-platform && npm run copy:assets",
    "build:renderer": "vite build && cp src/renderer/input.html dist/renderer/input.html && cp -r src/renderer/styles dist/renderer/ && npm run fix:japanese-fonts",
    "build:native:mac": "cd native && make install",
    "build:native:win": "cd native && make -f Makefile.win install",
    "build:native:linux": "echo 'Linux native tools not implemented yet'",
    "build:native:cross-platform": "npm run build:native:detect-platform",
    "build:native:detect-platform": "node -e \"const platform = process.platform; if (platform === 'darwin') { console.log('Building for macOS...'); require('child_process').execSync('npm run build:native:mac', {stdio: 'inherit'}); } else if (platform === 'win32') { console.log('Building for Windows...'); require('child_process').execSync('npm run build:native:win', {stdio: 'inherit'}); } else { console.log('Building for Linux...'); require('child_process').execSync('npm run build:native:linux', {stdio: 'inherit'}); }\"",
    "copy:assets": "mkdir -p dist && if [ -d src/native-tools ]; then cp -r src/native-tools dist/; fi",
    "fix:japanese-fonts": "cat > dist/renderer/styles/base/reset.css << 'EOF'\n/* CSS Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', 'Yu Gothic UI', 'Meiryo UI', 'MS UI Gothic', 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', 'BIZ UDPGothic', 'Noto Sans CJK JP', 'Noto Sans JP', 'Source Han Sans JP', 'DejaVu Sans', 'Ubuntu', sans-serif;\n    background: rgb(20, 20, 20);\n    overflow: hidden;\n    user-select: none;\n    margin: 0;\n    padding: 0;\n}\nEOF",
    "typecheck": "tsc --noEmit",
    "build": "npm run compile && npm run build:electron",
    "build:electron": "npm run build:electron:detect-platform",
    "build:electron:detect-platform": "node -e \"const platform = process.platform; if (platform === 'darwin') { require('child_process').execSync('electron-builder --mac --publish=never', {stdio: 'inherit'}); } else if (platform === 'win32') { require('child_process').execSync('electron-builder --win --publish=never', {stdio: 'inherit'}); } else { require('child_process').execSync('electron-builder --linux --publish=never', {stdio: 'inherit'}); }\"",
    "clean": "rm -rf dist/mac* dist/win* dist/linux* dist/*.dmg dist/*.exe dist/*.AppImage dist/*.zip dist/*.blockmap",
    "release": "semantic-release",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=tests/unit",
    "test:integration": "jest --testPathPattern=tests/integration",
    "lint": "eslint 'src/**/*.{js,ts}' 'tests/**/*.{js,ts}'",
    "lint:fix": "eslint 'src/**/*.{js,ts}' 'tests/**/*.{js,ts}' --fix",
    "pre-push": "npm run lint && npm run typecheck && npm test",
    "prepare": "husky",
    "reset-accessibility": "tccutil reset Accessibility com.electron.prompt-line && echo 'âœ… Accessibility permissions for Prompt Line have been reset'"
  },
  "keywords": [
    "paste",
    "quick",
    "text",
    "productivity"
  ],
  "author": "nkmr-jp",
  "license": "MIT",
  "engines": {
    "node": ">=20.8.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@jest/globals": "^30.0.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^11.0.3",
    "conventional-changelog-conventionalcommits": "^9.1.0",
    "@types/jest": "^29.5.14",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "20.17.57",
    "@typescript-eslint/eslint-plugin": "^8.34.0",
    "@typescript-eslint/parser": "^8.34.0",
    "electron": "^36.5.0",
    "electron-builder": "^26.0.16",
    "electron-mock-ipc": "0.3.12",
    "eslint": "^9.29.0",
    "eslint-plugin-jest": "^28.11.0",
    "globals": "^16.2.0",
    "husky": "^9.1.7",
    "jest": "^30.0.0",
    "jest-environment-jsdom": "^30.0.0",
    "jest-environment-node": "^30.0.0",
    "semantic-release": "^24.2.5",
    "ts-jest": "^29.4.0",
    "typescript": "~5.5.0",
    "vite": "^6.3.5"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.{js,ts}",
      "**/?(*.)+(spec|test).{js,ts}"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/main.{js,ts}",
      "!**/node_modules/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.ts"
    ],
    "testTimeout": 10000,
    "forceExit": true
  },
  "build": {
    "appId": "com.electron.prompt-line",
    "productName": "Prompt Line",
    "files": [
      "dist/**/*",
      "assets/**/*",
      "package.json",
      "!dist/mac",
      "!dist/mac-arm64",
      "!dist/*.dmg",
      "!dist/*.zip",
      "!dist/*.blockmap",
      "!dist/builder-*"
    ],
    "asarUnpack": [
      "dist/native-tools/**/*"
    ],
    "afterSign": "scripts/afterSign.js",
    "mac": {
      "category": "public.app-category.productivity",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "icon": "assets/Prompt-Line.icns",
      "artifactName": "Prompt-Line-${version}-${arch}.${ext}",
      "extendInfo": {
        "LSUIElement": true,
        "NSAppleEventsUsageDescription": "This app needs to control other applications to paste text.",
        "NSAccessibilityUsageDescription": "This app needs accessibility access to paste text into other applications."
      },
      "target": [
        {
          "target": "dmg",
          "arch": "x64"
        },
        {
          "target": "dmg",
          "arch": "arm64"
        }
      ]
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": "x64"
        }
      ],
      "icon": "assets/Prompt-Line.ico",
      "artifactName": "Prompt-Line-${version}-${arch}.${ext}"
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": "x64"
        }
      ],
      "icon": "assets/Prompt-Line.png",
      "artifactName": "Prompt-Line-${version}-${arch}.${ext}",
      "category": "Utility"
    },
    "dmg": {
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    }
  },
  "dependencies": {
    "js-yaml": "^4.1.0"
  }
}
